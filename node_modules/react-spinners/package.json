{
  "_from": "react-spinners",
  "_id": "react-spinners@0.4.7",
  "_inBundle": false,
  "_integrity": "sha512-+XPY9HkcNshu8+zZ5VomK+dWSkGTycEWH41OJnqItm7ooopLCXngJIh80OTBYZReLQ9gFwLjVsjfZz2sV+14Tg==",
  "_location": "/react-spinners",
  "_phantomChildren": {
    "babel-plugin-emotion": "9.2.11",
    "create-emotion-styled": "9.2.8"
  },
  "_requested": {
    "escapedName": "react-spinners",
    "fetchSpec": "latest",
    "name": "react-spinners",
    "raw": "react-spinners",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-spinners/-/react-spinners-0.4.7.tgz",
  "_shasum": "c3cef1be0ac09e7224922e85827ed87032387312",
  "_spec": "react-spinners",
  "_where": "C:\\Users\\jhs92\\OneDrive\\바탕 화면\\jeong",
  "author": {
    "name": "David Hu",
    "url": "http://www.davidhu.io"
  },
  "bugs": {
    "url": "https://github.com/davidhu2000/react-spinners/issues"
  },
  "bundleDependencies": false,
  "contributors": [
    {
      "name": "Cisco Guillaume",
      "url": "https://github.com/GuillaumeCisco"
    }
  ],
  "dependencies": {
    "emotion": "^9.1.1",
    "prop-types": "^15.5.10",
    "react-emotion": "^9.1.1",
    "recompose": "0.27.1"
  },
  "deprecated": false,
  "description": "A collection of react loading spinners",
  "devDependencies": {
    "babel-cli": "^6.26.0",
    "babel-core": "^6.26.0",
    "babel-eslint": "^8.0.2",
    "babel-loader": "^7.1.2",
    "babel-plugin-emotion": "^9.1.0",
    "babel-plugin-transform-es2015-modules-umd": "^6.6.5",
    "babel-polyfill": "^6.26.0",
    "babel-preset-es2015": "^6.6.0",
    "babel-preset-react": "^6.5.0",
    "babel-preset-stage-0": "^6.24.1",
    "babel-register": "^6.26.0",
    "eslint": "^4.11.0",
    "eslint-config-airbnb": "^16.1.0",
    "eslint-friendly-formatter": "^3.0.0",
    "eslint-loader": "^1.9.0",
    "eslint-plugin-import": "^2.8.0",
    "eslint-plugin-jsx-a11y": "^6.0.2",
    "eslint-plugin-react": "^7.5.1",
    "flow-bin": "^0.50.0",
    "react": "^15.4.2",
    "react-addons-test-utils": "^15.6.2",
    "react-click-outside": "^3.0.0",
    "react-color": "^2.13.8",
    "react-dom": "^15.4.2",
    "webpack": "^3.8.1"
  },
  "homepage": "https://github.com/davidhu2000/react-spinners",
  "keywords": [
    "activity",
    "halogen",
    "loader",
    "loaders",
    "loading",
    "progress",
    "react",
    "react-spinner",
    "react-spinners",
    "reactjs",
    "spinner",
    "spinners"
  ],
  "license": "MIT",
  "main": "dist/index.js",
  "name": "react-spinners",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "^0.14.0 || ^15.0.0 || ^16.0.0",
    "react-dom": "^0.14.0 || ^15.0.0 || ^16.0.0"
  },
  "readme": "# React Spinners\n\n[![npm version](https://badge.fury.io/js/react-spinners.svg)][npm_url]\n[![circle ci](https://circleci.com/gh/davidhu2000/react-spinners.svg?style=shield)][ci_url]\n[![downloads](https://img.shields.io/npm/dt/react-spinners.svg)][npm_url]\n[![license](https://img.shields.io/npm/l/react-spinners.svg)][npm_url]\n[![Code Triagers Badge](https://www.codetriage.com/davidhu2000/react-spinners/badges/users.svg)](https://www.codetriage.com/davidhu2000/react-spinners)\n\n[![dependencies Status](https://david-dm.org/davidhu2000/react-spinners/status.svg)](https://david-dm.org/davidhu2000/react-spinners)\n[![devDependencies Status](https://david-dm.org/davidhu2000/react-spinners/dev-status.svg)](https://david-dm.org/davidhu2000/react-spinners?type=dev)\n[![peerDependencies Status](https://david-dm.org/davidhu2000/react-spinners/peer-status.svg)](https://david-dm.org/davidhu2000/react-spinners?type=peer)\n\n[npm_url]: https://www.npmjs.org/package/react-spinners\n[ci_url]: https://circleci.com/gh/davidhu2000/react-spinners\n\nA collection of loading spinners with React.js based on [Halogen](https://github.com/yuanyan/halogen).\n\nThis package is bootstraped using [react-npm-boilerplate](https://github.com/juliancwirko/react-npm-boilerplate)\n\n## Demo\n\n[Demo Page](https://davidhu2000.github.io/react-spinners)\n\n## Installation\n\n```bash\nnpm install react-spinners --save\n```\n\n## Usage\n\nEach loader has their own default properties. You can overwrite the defaults by passing props into the loaders.\n\nEach loader accepts a `loading` prop as a boolean. The loader will not render anything if `loading` is `false`. The `loading` prop defaults to `true`.\n\n**IMPORTANT**: This package uses [emotion](https://github.com/emotion-js/emotion). Remember to add the plugin to `.babelrc`, for example: \n\n```\n{\n    \"presets\": [\"react\", \"env\"],\n    \"plugins\": [\"emotion\"]\n}\n```\n\n### Examples\n \n```js\nimport React from 'react';\nimport { css } from 'react-emotion';\n// First way to import\nimport { ClipLoader } from 'react-spinners';\n// Another way to import\nimport ClipLoader from 'react-spinners/ClipLoader';\n\nconst override = css`\n    display: block;\n    margin: 0 auto;\n    border-color: red;\n`;\n\nclass AwesomeComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true\n    }\n  }\n  render() {\n    return (\n      <div className='sweet-loading'>\n        <ClipLoader\n          className={override}\n          sizeUnit={\"px\"}\n          size={150}\n          color={'#123abc'}\n          loading={this.state.loading}\n        />\n      </div> \n    )\n  }\n}\n```\n\n## Available Loaders, PropTypes, and Default Values\n\nCommon default props for all loaders:\n\n```js\nloading: true\ncolor: '#000000'\nclassName: ''\n```\nNote:\n`className` works exactly like the `className` works with the emotion package.\nYou can directly write your css in css syntax without the dirty camelCase css in jss syntax.\nWe recommend you to use this awesome library in your project. It supports Server side rendering with HTTP2 Stream! \nMore info about using className [here](https://emotion.sh/docs/css)\n\nFor `size`, `height`, and `width` props, there are `sizeUnit`, `heightUnit`, and `widthUnit` prop that accepts `px`, `%`, or `em`. The default for the unit prop is `px`.\n\nLoader                  | size:int | height:int | width:int | radius:int | margin:str\n-----------------------:|:--------:|:----------:|:---------:|:----------:|:---------:\nBarLoader               |          | `4`        | `100`     |            |\nBeatLoader              | `15`     |            |           |            | `2px`\nBounceLoader            | `60`     |            |           |            |\nCircleLoader            | `50`     |            |           |            |\nClipLoader              | `35`     |            |           |            |\nClimbingBoxLoader       | `15`     |            |           |            |\nDotLoader               | `60`     |            |           |            | `2px`\nFadeLoader              |          | `15`       | `5`       | `2`        | `2px`\nGridLoader              | `15`     |            |           |            |\nHashLoader              | `50`     |            |           |            | `2px`\nMoonLoader              | `60`     |            |           |            | `2px`\nPacmanLoader            | `25`     |            |           |            | `2px`\nPropagateLoader         | `15`     |            |           |            |\nPulseLoader             | `15`     |            |           |            | `2px`\nRingLoader              | `60`     |            |           |            | `2px`\nRiseLoader              | `15`     |            |           |            | `2px`\nRotateLoader            | `15`     |            |           |            | `2px`\nScaleLoader             |          | `35`       | `4`       | `2`        | `2px`\nSyncLoader              | `15`     |            |           |            | `2px`\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/davidhu2000/react-spinners.git"
  },
  "scripts": {
    "build": "$npm_execpath run prepublish && webpack",
    "clean": "rm -r helpers/; rm *Loader.js; rm index.js",
    "lint": "eslint ./src  --ext .js,.jsx",
    "lintfix": "eslint ./src  --ext .js,.jsx --fix",
    "major": "npm version major && npm publish && npm run clean",
    "minor": "npm version minor && npm publish && npm run clean",
    "patch": "npm version patch && npm publish && npm run clean",
    "prepublish": "babel --plugins transform-es2015-modules-umd src --ignore __tests__ --out-dir ./",
    "test": "npm run lint",
    "watch": "babel-node ./node_modules/.bin/webpack --watch"
  },
  "types": "./src/index.d.ts",
  "version": "0.4.7"
}
