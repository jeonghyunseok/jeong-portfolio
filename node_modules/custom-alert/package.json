{
  "_from": "custom-alert",
  "_id": "custom-alert@2.2.0",
  "_inBundle": false,
  "_integrity": "sha1-/7sMG6hiyn1QJuKPfHr9Woym8ZU=",
  "_location": "/custom-alert",
  "_phantomChildren": {},
  "_requested": {
<<<<<<< HEAD
    "escapedName": "custom-alert",
    "fetchSpec": "latest",
    "name": "custom-alert",
    "raw": "custom-alert",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
=======
    "type": "tag",
    "registry": true,
    "raw": "custom-alert",
    "name": "custom-alert",
    "escapedName": "custom-alert",
    "rawSpec": "",
    "saveSpec": null,
    "fetchSpec": "latest"
>>>>>>> 9cd13028184df382dc81fd1eea0a55e58f959e88
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/custom-alert/-/custom-alert-2.2.0.tgz",
  "_shasum": "ffbb0c1ba862ca7d5026e28f7c7afd5a8ca6f195",
  "_spec": "custom-alert",
  "_where": "D:\\vrware-server\\storymaker-api",
  "author": "",
  "bugs": {
    "url": "https://github.com/PhilippeAssis/custom-alert/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "Override the alert () and confirm () functions of JavaScript, allowing you to customize them. This application does not use jQuery or another framework, just JavaScript and CSS. Responsive design.",
  "devDependencies": {
    "gulp": "^3.9.1",
    "gulp-autowatch": "^1.0.2",
    "gulp-clean": "^0.3.2",
    "gulp-minify": "0.0.14",
    "gulp-plumber": "^1.1.0",
    "gulp-pug": "^3.1.0",
    "gulp-stylus": "^2.6.0",
    "pug": "^2.0.0-beta6",
    "stylus": "^0.54.5"
  },
  "homepage": "https://github.com/PhilippeAssis/custom-alert#readme",
  "license": "ISC",
  "main": "gulpfile.js",
  "name": "custom-alert",
<<<<<<< HEAD
  "optionalDependencies": {},
  "readme": "#custom-alert.js\n![custom-alert.js](https://raw.githubusercontent.com/PhilippeAssis/custom-alert/master/customAlert2.jpg)\n\nOverride the alert() and confirm() functions of JavaScript, allowing you to customize them. This application does not use jQuery or another framework, just JavaScript and CSS. Responsive design.\n\n## Demo\n[demo page](https://philippeassis.github.io/custom-alert)\n\n## Install\n#### NPM\n```\nnpm install --save custom-alert\n```\n\n#### Bower\n```\nbower install --save custom-alert\n```\n\n### Apply\n\nDefault style\n```html\n<link rel=\"stylesheet\" href=\"YOU/PATH/dist/css/custom-alert.css\">\n```\n\nDefault bootstrap style\n```html\n<link rel=\"stylesheet\" href=\"YOU/PATH/dist/css/custom-alert-bootstrap.css\"> \n```\n\nand script\n```html\n<!--<script src=\"YOU/PATH/dist/js/custom-alert.min.js\">-->\n```\n\n## Use\n\nThere are **two** ways to apply customAlert.\n\nThe first is to start the function by allowing it to automatically override the `alert()` and `confirm()` global (`window.alert`, `window.confirm`).\n```javascript\n    new customAlert();\n    confirm(\"Confirm text\", function(done){\n        alert('Alert text')\n    })\n```\n\nThe second returning the functions in an object, so it passes `false` as an attribute of `customAlert()`\n```javascript\n    var custom = new customAlert(false);\n    custom.confirm(\"Confirm text\", function(done){\n        custom.alert('Alert text')\n    })\n```\n### alert(dialog, options || callback, callback)\nSimply.\n```javascript\n    alert(\"Alert text\")\n```\n\nEditing title and button text;\n```javascript\n    alert(\"Alert text\", {title: 'Olá', button: \"Go!\"})\n```\n\nPerforming a callback after the operation.\n```javascript\n    alert(\"Alert text\", {title: 'Olá', button: \"Go!\"}, function(){\n        //...\n    })\n```\n### confirm(dialog, callback || {callbacks}, options)\nCalling a callback to handle the result. In this case, the callback receives an argument with `true` or `false`\n```javascript\n    confirm(\"Alert text\", function(done){\n        if(done){\n            alert('true')\n        }\n        else{\n            alert('false')\n        }\n    })\n```\nDefining different callbacks for different results.\n```javascript\n    confirm(\"Comfirm text\", {\n        \"success\" : function(){\n            //..\n        },\n        \"cancel\" : function(){\n            //..\n        }\n    })\n```\nSetting Title and Text of Buttons.\n```javascript\n    confirm(\"Comfirm text\", function(done){\n        //..\n    }, { \n        \"title\" : \"Wellcome\",\n        \"done\": {\n                \"text\": \":)\",\n        },\n        \"cancel\": {\n            \"text\" : \":(\",\n            \"default\": true\n        }\n    })\n```\n\n## Arguments and options\n\n#### Alert\n##### options\n - **title:**  The title.\n - **done:**  The button text.\n\n#### Confirm\n##### options\n - **title.text**  The title.\n - **title.default**  If true, set the default as default.\n - **title.bold**  Add bold text.\n - **done.text**  The done text.\n - **done.default**  If true, set the default as default.\n - **done.bold**  Add bold text.\n - **cancel:**  The cancel text.\n\n##### callback\n - **success:**  if button done press.\n - **cancel:**  if button calcel press.\n - **only function:**  Gets an attribute with true or false.\n\n## Keyboard events\nThe ENTER key performs the default button.\n\n```javascript\n{\n    \"cancel\": {\n        \"default\" : true\n    }\n}\n```\nIn this example, the default button will be \"Cancel\", so by clicking ENTER on the keyboard, this button will be executed.\n**By default the \"default button\" is done.**\n\nI see an example on the [demo page](https://philippeassis.github.io/custom-alert)",
  "readmeFilename": "README.md",
=======
>>>>>>> 9cd13028184df382dc81fd1eea0a55e58f959e88
  "repository": {
    "type": "git",
    "url": "git+https://github.com/PhilippeAssis/custom-alert.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "2.2.0"
}
